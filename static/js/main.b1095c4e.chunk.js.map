{"version":3,"sources":["hooks/useCalculator.js","components/Calculator/Calculator.js","App.js","index.js"],"names":["useCalculator","useState","value","setValue","memoPlusValue","setMemoPlusValue","memoMinusValue","setMemoMinusValue","handleChangeValue","useCallback","evt","target","handleResetValue","handleErrors","action","result","isNaN","Error","toString","prevValue","setTimeout","handleComputeResult","eval","Infinity","handleMemoPlusClick","handleMemoMinusClick","handleMemoResultClick","handleMemoClearClick","handleComputeSin","Math","sin","handleComputeCos","cos","handleComputeTg","tan","handleComputeCtg","a","handleComputeSqrt","sqrt","handleBackspaceClick","length","slice","Calculator","className","type","readOnly","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1095c4e.chunk.js","sourcesContent":["import { useState, useCallback } from 'react';\n\n/**\n * @module useCalculator\n * @description Хук useCalculator.</br>\n * Содержит логику калькулятора. Возвращает значение, которое отображается\n *  на дисплее калькулятора, и методы - обработчики нажатия на кнопки калькулятора.\n * @since v.1.0.0\n * @returns {string, function}\n */\nconst useCalculator = () => {\n  const [value, setValue] = useState('0');\n  const [memoPlusValue, setMemoPlusValue] = useState(0);\n  const [memoMinusValue, setMemoMinusValue] = useState(0);\n\n  /**\n   * @method handleChangeValue\n   * @description Обработчик изменения значения, выводимого на дисплей калькулятора.\n   * @since v.1.0.0\n   * @public\n   * @returns {void}\n   */\n  const handleChangeValue = useCallback(\n    (evt) => {\n      if (value === '0' || !value) {\n        setValue(evt.target.value);\n      } else {\n        setValue(value + evt.target.value);\n      }\n    },\n    [value],\n  );\n\n  /**\n   * @method handleResetValue\n   * @description Обработчик нажатия на кнопку очистки дисплея.</br>\n   * Сбрасывает значение на дисплее на 0.\n   * @since v.1.0.0\n   * @public\n   * @returns {void}\n   */\n  const handleResetValue = useCallback(() => {\n    setValue('0');\n  }, []);\n\n  /**\n   * @method handleErrors\n   * @description Обработчик ошибок при выполнении математических действий.</br>\n   *  Принимает аргументом коллбэк action, который выполняет определенное действие.\n   *  Если в результате в полнения этого действия не произошло ошибок вычисления, результат\n   *  выводится на дисплей калькулятора. Если происходит ошибка вычисления, на дисплей\n   *  выводится сообщение об ошибке.\n   * @param {function} action - коллбэк, выполняет определенное действие с введенным значением.\n   * @since v.1.0.0\n   * @public\n   * @returns {void}\n   */\n  const handleErrors = useCallback(\n    (action) => {\n      try {\n        const result = action(+value);\n        if (isNaN(result)) {\n          throw Error();\n        } else {\n          setValue(result.toString());\n        }\n      } catch {\n        const prevValue = value;\n        setValue('Ошибка!');\n        setTimeout(() => {\n          setValue(prevValue);\n        }, 1100);\n      }\n    },\n    [value],\n  );\n\n  /**\n   * @method handleComputeResult\n   * @description Обработчик нажатия на клавишу \"равно\", вычисляет введенное выражение\n   *  и выводит его на дисплей. Если в процессе выичсления происходит \"деление на нуль\",\n   *  на дисплей выводится сообщение об ошибке.\n   * @since v.1.0.0\n   * @public\n   * @returns {void}\n   */\n  const handleComputeResult = useCallback(() => {\n    try {\n      const result = eval(value);\n      if (result === Infinity) {\n        throw Error();\n      } else {\n        setValue(result.toString());\n      }\n    } catch {\n      const prevValue = value;\n      setValue('Ошибка!');\n      setTimeout(() => {\n        setValue(prevValue);\n      }, 1100);\n    }\n  }, [value]);\n\n  /**\n   * @method handleMemoPlusClick\n   * @description Обработчик нажатия на клавишу M+.</br>\n   * Проверяет корректность значения на дисплее и сохраняет его в память, если\n   *  сохраняемое значение является числом.\n   * @since v.1.0.0\n   * @public\n   * @returns {void}\n   */\n  const handleMemoPlusClick = useCallback(() => {\n    try {\n      if (isNaN(+value)) {\n        throw Error();\n      } else {\n        const newValue = memoPlusValue + +value;\n        setMemoPlusValue(newValue);\n      }\n    } catch {\n      const prevValue = value;\n      setValue('Ошибка!');\n      setTimeout(() => {\n        setValue(prevValue);\n      }, 1100);\n    }\n  }, [value, memoPlusValue]);\n\n  /**\n   * @method handleMemoMinusClick\n   * @description Обработчик нажатия на клавишу M-.</br>\n   * Проверяет корректность значения на дисплее и сохраняет его в память, если\n   *  сохраняемое значение является числом.\n   * @since v.1.0.0\n   * @public\n   * @returns {void}\n   */\n  const handleMemoMinusClick = useCallback(() => {\n    try {\n      if (isNaN(+value)) {\n        throw Error();\n      } else {\n        const newValue = memoMinusValue + +value;\n        setMemoMinusValue(newValue);\n      }\n    } catch {\n      const prevValue = value;\n      setValue('Ошибка!');\n      setTimeout(() => {\n        setValue(prevValue);\n      }, 1100);\n    }\n  }, [value, memoMinusValue]);\n\n  /**\n   * @method handleMemoResultClick\n   * @description Обработчик нажатия на кнопку MR.</br>\n   * Вычисляет разницу между значениями, сохраненными в ячейках памяти, и выводит\n   *  результат на дисплей.\n   * @since v.1.0.0\n   * @public\n   * @returns {void}\n   */\n  const handleMemoResultClick = useCallback(() => {\n    const memoResultValue = memoPlusValue - memoMinusValue;\n    setValue(memoResultValue.toString());\n  }, [memoPlusValue, memoMinusValue]);\n\n  /**\n   * @method handleMemoClearClick\n   * @description Обработчик нажатия на кнопку MC.</br>\n   * Очищает ячейки памяти от сохраненных в них значений.\n   * @since v.1.0.0\n   * @public\n   * @returns {void}\n   */\n  const handleMemoClearClick = useCallback(() => {\n    setMemoPlusValue(0);\n    setMemoMinusValue(0);\n  }, []);\n\n  /**\n   * @method handleComputeSin\n   * @description Обработчик нажатия на кнопку sin.</br>\n   * Вычисляет значение синуса в радианах и выводит результат на дисплей.\n   *  Если в процессе вычисления происходит ошибка, на дсиплей выводится сообщение об ошибке.\n   * @since v.1.0.0\n   * @public\n   * @returns {void}\n   */\n  const handleComputeSin = useCallback(() => {\n    handleErrors(Math.sin);\n  }, [handleErrors]);\n\n  /**\n   * @method handleComputeCos\n   * @description Обработчик нажатия на кнопку cos.</br>\n   * Вычисляет значение косинуса в радианах и выводит результат на дисплей.\n   *  Если в процессе вычисления происходит ошибка, на дсиплей выводится сообщение об ошибке.\n   * @since v.1.0.0\n   * @public\n   * @returns {void}\n   */\n  const handleComputeCos = useCallback(() => {\n    handleErrors(Math.cos);\n  }, [handleErrors]);\n\n  /**\n   * @method handleComputeTg\n   * @description Обработчик нажатия на кнопку tg.</br>\n   * Вычисляет значение тангенса в радианах и выводит результат на дисплей.\n   *  Если в процессе вычисления происходит ошибка, на дсиплей выводится сообщение об ошибке.\n   * @since v.1.0.0\n   * @public\n   * @returns {void}\n   */\n  const handleComputeTg = useCallback(() => {\n    handleErrors(Math.tan);\n  }, [handleErrors]);\n\n  /**\n   * @method handleComputeCtg\n   * @description Обработчик нажатия на кнопку ctg.</br>\n   * Вычисляет значение котангенса в радианах и выводит результат на дисплей.\n   *  Если в процессе вычисления происходит ошибка, на дсиплей выводится сообщение об ошибке.\n   * @since v.1.0.0\n   * @public\n   * @returns {void}\n   */\n  const handleComputeCtg = useCallback(() => {\n    handleErrors((a) => 1 / Math.tan(a));\n  }, [handleErrors]);\n\n  /**\n   * @method handleComputeSqrt\n   * @description Обработчик нажатия на кнопку \"квадратный корень\".</br>\n   * Вычисляет квадратный корень введенного значения и выводит результат на дисплей.\n   *  Если в процессе вычисления происходит ошибка, на дсиплей выводится сообщение об ошибке.\n   * @since v.1.0.0\n   * @public\n   * @returns {void}\n   */\n  const handleComputeSqrt = useCallback(() => {\n    handleErrors(Math.sqrt);\n  }, [handleErrors]);\n\n  /**\n   * @method handleBackspaceClick\n   * @description Обработчик нажатия на клавишу Backspace.</br>\n   * Удаляет последний введенный символ на дисплее.\n   * @since v.1.0.0\n   * @public\n   * @returns {void}\n   */\n  const handleBackspaceClick = useCallback(() => {\n    if (value.length > 1) {\n      setValue(value.slice(0, value.length - 1));\n    } else {\n      setValue('0');\n    }\n  }, [value]);\n\n  return {\n    value,\n    handleChangeValue,\n    handleResetValue,\n    handleComputeResult,\n    handleMemoPlusClick,\n    handleMemoMinusClick,\n    handleMemoClearClick,\n    handleMemoResultClick,\n    handleComputeSin,\n    handleComputeCos,\n    handleComputeTg,\n    handleComputeCtg,\n    handleComputeSqrt,\n    handleBackspaceClick,\n  };\n};\nexport { useCalculator };\n","import { useCalculator } from '../../hooks/useCalculator';\nimport './Calculator.css';\n\n/**\n * @module Calculator\n * @description Компонент Calculator.</br>Отвечает за отрисовку калькулятора.\n * @since v.1.0.0\n * @returns {JSX}\n */\nconst Calculator = () => {\n  const {\n    value,\n    handleChangeValue,\n    handleResetValue,\n    handleComputeResult,\n    handleMemoPlusClick,\n    handleMemoMinusClick,\n    handleMemoClearClick,\n    handleMemoResultClick,\n    handleComputeSin,\n    handleComputeCos,\n    handleComputeTg,\n    handleComputeCtg,\n    handleComputeSqrt,\n    handleBackspaceClick,\n  } = useCalculator();\n\n  return (\n    <div className=\"calculator page__calculator\">\n      <input type=\"text\" readOnly value={value} className=\"calculator__screen\"></input>\n      <div className=\"calculator__buttons\">\n        <button\n          type=\"button\"\n          onClick={handleChangeValue}\n          className=\"calculator__button calculator__button_value_1\"\n          value=\"1\"\n        >\n          1\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleChangeValue}\n          className=\"calculator__button calculator__button_value_2\"\n          value=\"2\"\n        >\n          2\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleChangeValue}\n          className=\"calculator__button calculator__button_value_3\"\n          value=\"3\"\n        >\n          3\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleChangeValue}\n          className=\"calculator__button calculator__button_value_4\"\n          value=\"4\"\n        >\n          4\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleChangeValue}\n          className=\"calculator__button calculator__button_value_5\"\n          value=\"5\"\n        >\n          5\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleChangeValue}\n          className=\"calculator__button calculator__button_value_6\"\n          value=\"6\"\n        >\n          6\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleChangeValue}\n          className=\"calculator__button calculator__button_value_7\"\n          value=\"7\"\n        >\n          7\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleChangeValue}\n          className=\"calculator__button calculator__button_value_8\"\n          value=\"8\"\n        >\n          8\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleChangeValue}\n          className=\"calculator__button calculator__button_value_9\"\n          value=\"9\"\n        >\n          9\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleChangeValue}\n          className=\"calculator__button calculator__button_value_0\"\n          value=\"0\"\n        >\n          0\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleComputeResult}\n          className=\"calculator__button calculator__button_value_result\"\n        >\n          =\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleChangeValue}\n          className=\"calculator__button calculator__button_value_plus\"\n          value=\"+\"\n        >\n          +\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleChangeValue}\n          className=\"calculator__button calculator__button_value_minus\"\n          value=\"-\"\n        >\n          -\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleChangeValue}\n          className=\"calculator__button calculator__button_value_multiply\"\n          value=\"*\"\n        >\n          x\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleChangeValue}\n          className=\"calculator__button calculator__button_value_division\"\n          value=\"/\"\n        >\n          /\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleChangeValue}\n          className=\"calculator__button calculator__button_value_dot\"\n          value=\".\"\n        >\n          .\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleResetValue}\n          className=\"calculator__button calculator__button_value_C\"\n        >\n          C\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleMemoClearClick}\n          className=\"calculator__button calculator__button_value_MC\"\n        >\n          MC\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleMemoResultClick}\n          className=\"calculator__button calculator__button_value_MR\"\n        >\n          MR\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleMemoPlusClick}\n          className=\"calculator__button calculator__button_value_M-PLUS\"\n        >\n          M+\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleMemoMinusClick}\n          className=\"calculator__button calculator__button_value_M-MINUS\"\n        >\n          M-\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={handleComputeSin}\n          className=\"calculator__button calculator__button_value_sin\"\n        >\n          sin\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleComputeCos}\n          className=\"calculator__button calculator__button_value_cos\"\n        >\n          cos\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleComputeTg}\n          className=\"calculator__button calculator__button_value_tg\"\n        >\n          tg\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleComputeCtg}\n          className=\"calculator__button calculator__button_value_ctg\"\n        >\n          ctg\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleComputeSqrt}\n          className=\"calculator__button calculator__button_value_sqrt\"\n        >\n          &#8730;\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleBackspaceClick}\n          className=\"calculator__button calculator__button_value_backspace\"\n        >\n          &#10233;\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport { Calculator };\n","import { Calculator } from './components/Calculator/Calculator';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <>\n      <Calculator />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"page\")\n);\n"],"sourceRoot":""}